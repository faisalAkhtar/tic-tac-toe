{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","state","squares","Array","fill","isNext","i","this","slice","calculateWinner","setState","handleClick","status","winner","renderSquare","React","Component","Game","lines","length","a","b","c","nFlag","ReactDOM","render","document","getElementById"],"mappings":"2PAIA,SAASA,EAAOC,GACd,OACE,4BAAQC,UAAU,SAASC,QAASF,EAAME,SACvCF,EAAMG,O,IAKPC,E,kDACJ,WAAYJ,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,CACXC,QAASC,MAAM,GAAGC,KAAK,MACvBC,QAAQ,GAJO,E,wDAQPC,GACV,IAAMJ,EAAUK,KAAKN,MAAMC,QAAQM,QAC/BC,EAAgBP,GAAWA,EAAQI,KAGrB,MAAdJ,EAAQI,KAGZJ,EAAQI,GAAKC,KAAKN,MAAMI,OAAS,IAAM,IACvCE,KAAKG,SAAS,CACZR,QAASA,EACTG,QAASE,KAAKN,MAAMI,Y,mCAIXC,GAAI,IAAD,OACd,OACE,kBAACX,EAAD,CACEI,MAAOQ,KAAKN,MAAMC,QAAQI,GAC1BR,QAAS,kBAAM,EAAKa,YAAYL,Q,+BAMpC,IACIM,EADEC,EAASJ,EAAgBF,KAAKN,MAAMC,SAY1C,OARIU,EAFAC,EACa,MAAXA,EACO,YAEA,WAAaA,EAGf,iBAAmBN,KAAKN,MAAMI,OAAS,IAAM,KAItD,6BACE,yBAAKR,UAAU,aACZU,KAAKO,aAAa,GAAIP,KAAKO,aAAa,GAAIP,KAAKO,aAAa,IAEjE,yBAAKjB,UAAU,aACZU,KAAKO,aAAa,GAAIP,KAAKO,aAAa,GAAIP,KAAKO,aAAa,IAEjE,yBAAKjB,UAAU,aACZU,KAAKO,aAAa,GAAIP,KAAKO,aAAa,GAAIP,KAAKO,aAAa,IAEjE,yBAAKjB,UAAU,UAAUe,Q,GAzDbG,IAAMC,WA+DpBC,E,uKAEF,OACE,yBAAKpB,UAAU,cACb,kBAACG,EAAD,W,GAJWe,IAAMC,WAiBzB,SAASP,EAAgBP,GAYvB,IAXA,IAAMgB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGAZ,EAAI,EAAGA,EAAIY,EAAMC,OAAQb,IAAK,CAAC,IAAD,cACnBY,EAAMZ,GADa,GAC9Bc,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIpB,EAAQkB,IAAMlB,EAAQkB,KAAOlB,EAAQmB,IAAMnB,EAAQkB,KAAOlB,EAAQoB,GACpE,OAAOpB,EAAQkB,GAKnB,IADA,IAAIG,GAAQ,EACHjB,EAAI,EAAGA,EAAIJ,EAAQiB,OAAQb,IAChB,MAAdJ,EAAQI,KAAYiB,GAAQ,GAElC,OAAKA,EAEE,KAFY,IA5BrBC,IAASC,OACP,kBAACR,EAAD,MACAS,SAASC,eAAe,W","file":"static/js/main.4445ddcd.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  )\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      isNext: true\n    };\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n    if (calculateWinner(squares || squares[i])) {\n      return;\n    }\n    if (squares[i] != null) {\n      return;\n    }\n    squares[i] = this.state.isNext ? 'X' : 'O';\n    this.setState({\n      squares: squares,\n      isNext: !this.state.isNext\n    });\n  }\n\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.state.squares[i]}\n        onClick={() => this.handleClick(i)}\n      />\n    );\n  }\n\n  render() {\n    const winner = calculateWinner(this.state.squares)\n    let status;\n    if (winner) {\n      if (winner === 'I') {\n        status = 'Game Draw'\n      } else {\n        status = 'Winner: ' + winner\n      }\n    } else {\n      status = 'Next player: ' + (this.state.isNext ? 'X' : 'O');\n    }\n\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}{this.renderSquare(1)}{this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}{this.renderSquare(4)}{this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}{this.renderSquare(7)}{this.renderSquare(8)}\n        </div>\n        <div className=\"status\">{status}</div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  render() {\n    return (\n      <div className=\"game-board\">\n        <Board />\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  let nFlag = false;\n  for (let i = 0; i < squares.length; i++) {\n    if (squares[i] == null) nFlag = true;\n  }\n  if (!nFlag) return 'I';\n\n  return null;\n}\n"],"sourceRoot":""}